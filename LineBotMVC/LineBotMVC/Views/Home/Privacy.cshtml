@model IEnumerable<BotCommand>
@{
    ViewData["Title"] = "สร้างคำสั่ง Telegram";
}

<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container-fluid">
    <div class="header mt-4">
        <h1>📨 คำสั่ง Telegram</h1>
        <p>จัดการคำสั่งตอบกลับจาก Telegram Bot</p>
        <a href="@Url.Action("CreateTelegramC", "BotCommand")" class="add-btn">
            ➕ เพิ่มคำสั่ง Telegram
        </a>
        <a href="@Url.Action("CreateTelegramC", "BotCommand")" class="add-btn">
            ➕ เพิ่ม TelegramBot
        </a>

        <div class="form-group mt-4 mb-3">
            <label for="botTelegramSelect">เลือกบอท Telegram:</label>
            <div style="text-align: center; margin-bottom: 1rem;">
                <select id="botTelegramSelect" onchange="filterByBotTelegram()" class="form-select" style="max-width: 300px; display: inline-block;">
                    <option value="">-- กรุณาเลือกบอท --</option>
@*                     @foreach (var bot in ViewBag.BotTelegrams)
                    {
                        <option value="@bot.BotTelegramToken" selected="@(ViewBag.SelectedBotTelegramToken == bot.BotTelegramToken ? "selected" : null)">
                            @bot.BotTelegramName
                        </option>
                    } *@
                </select>
            </div>
        </div>
    </div>

    <div class="search-container">
        <input type="text" class="search-input" placeholder="🔍 ค้นหาคำสั่ง..." onkeyup="searchCommands(this.value)">
    </div>

    @if (!string.IsNullOrEmpty(ViewBag.SelectedBotTelegramToken))
    {
        <div class="stats-bar  mt-4">
            <span>จำนวนคำสั่งทั้งหมด: <span id="totalCount">@Model.Count()</span></span>
            <span>แสดงผล: <span id="visibleCount">@Model.Count()</span></span>
        </div>

        <div class="commands-grid" id="commandsGrid">
            @if (!Model.Any())
            {
                <div class="empty-state">
                    <svg viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 2L2 7v10c0 5.55 3.84 10 9 11 1.09-.21 2.11-.7 3-1.4.89.7 1.91 1.19 3 1.4 5.16-1 9-5.45 9-11V7l-10-5z" />
                    </svg>
                    <h3>ยังไม่มีคำสั่งสำหรับบอทนี้</h3>
                    <p>ลองเพิ่มคำสั่งใหม่หรือตรวจสอบชื่อบอท</p>
                </div>
            }
            else
            {
                @foreach (var cmd in Model)
                {
                    <div class="command-card" data-command="@cmd.Command.ToLower()">
                        <div class="command-header">
                            <div class="command-name">
                                @if (cmd.ResponseType == "text")
                                {
                                    <span class="type-icon text-icon"></span>
                                }
                                else if (cmd.ResponseType == "image")
                                {
                                    <span class="type-icon image-icon"></span>
                                }
                                else if (cmd.ResponseType == "mediaGroup")
                                {
                                    <span class="type-icon carousel-icon"></span>
                                }
                                else
                                {
                                    <span class="type-icon card-icon"></span>
                                }
                                @cmd.Command
                            </div>
                            <div class="command-type type-@cmd.ResponseType.ToLower()">
                                @cmd.ResponseType
                            </div>
                        </div>

                        <div class="command-content">
                            @if (cmd.ResponseType == "image" && !string.IsNullOrEmpty(cmd.ResponseText))
                            {
                                <img src="@cmd.ResponseText" alt="Command Image" class="command-image"
                                     onerror="this.src='https://via.placeholder.com/300x200/cccccc/666666?text=Image+Not+Found'">
                            }
                            else if (cmd.ResponseType == "mediaGroup" && !string.IsNullOrEmpty(cmd.ImagesJson))
                            {
                                var images = new List<string>();
                                try
                                {
                                    images = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(cmd.ImagesJson);
                                }
                                catch { }

                                <div class="carousel-container">
                                    @foreach (var imgUrl in images)
                                    {
                                        <img src="@imgUrl" alt="Media Image" class="carousel-image"
                                             onerror="this.src='https://via.placeholder.com/120x80/cccccc/666666?text=Error'">
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="command-text">@(cmd.ResponseText ?? "ไม่มีข้อความ")</div>
                            }
                        </div>

                        <div class="command-time-range mt-2 text-muted" style="font-size: 0.9em;">
                            <strong>ช่วงเวลา:</strong>
                            @if (!string.IsNullOrEmpty(cmd.TimePeriod))
                            {
                                @cmd.TimePeriod
                            }
                            else
                            {
                                <em>ยังไม่ได้กำหนดช่วงเวลา</em>
                            }
                        </div>

                        <div class="action-buttons">
                            <a href="@Url.Action("Edit", "TelegramBot", new { id = cmd.Id })" class="edit-btn">
                                ✏️ แก้ไข
                            </a>
                            <button type="button" class="delete-btn" onclick="confirmDelete('@cmd.Id', '@cmd.Command')">
                                🗑️ ลบ
                            </button>
                        </div>
                    </div>
                }
            }
        </div>
    }
    else
    {
        <p class="text-muted">กรุณาเลือกบอท Telegram เพื่อดูคำสั่ง</p>
    }
</div>

<!-- Delete Form -->
<form id="deleteForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" name="_method" value="delete" />
</form>

<script>
    function filterByBotTelegram() {
        const select = document.getElementById('botTelegramSelect');
        const token = select.value;
        let url = new URL(window.location.href);
        if (token) {
            url.searchParams.set('selectedBotTelegramToken', token);
        } else {
            url.searchParams.delete('selectedBotTelegramToken');
        }
        window.location.href = url.toString();
    }

    function searchCommands(query) {
        const searchTerm = query.toLowerCase();
        const cards = document.querySelectorAll('.command-card');
        let visibleCount = 0;

        cards.forEach(card => {
            const commandName = card.getAttribute('data-command');
            const commandText = card.querySelector('.command-text')?.textContent.toLowerCase() || '';
            const commandType = card.querySelector('.command-type').textContent.toLowerCase();

            const isVisible = commandName.includes(searchTerm) ||
                              commandText.includes(searchTerm) ||
                              commandType.includes(searchTerm);

            if (isVisible) {
                card.style.display = 'block';
                visibleCount++;
            } else {
                card.style.display = 'none';
            }
        });

        document.getElementById('visibleCount').textContent = visibleCount;
    }

    function confirmDelete(commandId, commandName) {
        Swal.fire({
            title: `❗ ต้องการลบคำสั่ง "${commandName}" หรือไม่?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'ใช่, ลบเลย',
            cancelButtonText: 'ยกเลิก'
        }).then((result) => {
            if (result.isConfirmed) {
                const form = document.getElementById('deleteForm');
                form.action = '@Url.Action("Delete", "TelegramBot")/' + commandId;
                form.submit();
            }
        });
    }
</script>